version: '3.7'

services:
  redis:
    image: redis
    container_name: redis
    healthcheck:
      timeout: 5s
      interval: 30s
      retries: 10
      test:
        - "CMD"
        - "bash"
        - "-c"
        - "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"
    ports:
      - "5001:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      timeout: 5s
      interval: 30s
      retries: 10
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=DEBmbwkSrzy9D1T9cJfa

  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: sqlserver
    healthcheck:
      test: [ "CMD", "sqlcmd", "-U", "sa", "-P", "Your_password123", "-Q", "select 1 || exit 1" ]
      interval: 20s
      retries: 20
    volumes:
      - sqlserverdata:/var/opt/mssql 
    ports:
      - "1434:1433"
    environment:
      ACCEPT_EULA: "Y" 
      MSSQL_PID: "Developer"
      SA_PASSWORD: "Your_password123"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.1
    container_name: elasticsearch
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 10
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:6.6.1
    container_name: kibana
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:5601/api/status || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 10
    ports:
    - "5601:5601"
    depends_on:
    - elasticsearch

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  elasticsearch-data:
    external: true
  sqlserverdata:
    external: true    
  rabbitmqdata:
    external: true